/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/createPrelevement.js":
/*!*******************************************!*\
  !*** ./resources/js/createPrelevement.js ***!
  \*******************************************/
/***/ (() => {

eval("$(function () {\n  // Fonction destinée à gérer les types de prélèvements: collectifs (et donc sans lecture d'un troupeau ni écriture)\n  // ou individuel (ce qui implique de lire la liste des animaux du troupeau et d'écrire les nouveaux animaux).\n  // la variable i désigne le numéro du prélèvement\n  $(\".indiv\").attr('checked', 'checked');\n  $(\".nom_melange\").attr('required', false);\n  console.log();\n  liste_animals(1);\n  // On active la fenêtre modale\n\n  // AU changement de choix prelevt individ ou mélange, on réajuste les champs\n  $(\".typeprelevement\").on('change', function () {\n    // On récupère le type: indiv ou coll\n    var type = $(this).attr('id').split('_')[0];\n    // On récupère le numéro du prélèvement\n    var i = $(this).attr('id').split('_')[1];\n    // Si le choix est individuel\n    if (type == 'indiv') {\n      // On récupère la liste des animaux\n      liste_animals(i);\n      $(\"#ligne_indiv_\" + i).show();\n      $(\"#ligne_melange_\" + i).hide();\n      $(\"#nom_melange_\" + i).val('');\n      $(\"#nom_melange_\" + i).attr('required', false);\n      $(\"#numero_animal_\" + i).attr('required', true);\n\n      // Si c'est du type prélèvement simple\n    } else if (type == 'coll') {\n      liste_melanges(i);\n      $(\"#ligne_melange_\" + i).show();\n      $(\"#ligne_indiv_\" + i).hide();\n      $(\"#numero_animal_\" + i).val('');\n      $(\"#nom_animal_\" + i).val('');\n      $(\"#numero_animal_\" + i).attr('required', false);\n      $(\"#nom_melange_\" + i).attr('required', true);\n\n      // sinon c'est d'un type prélèvement avec des animaux identifiés\n    } else {\n      document.cookie = 'demande = 61';\n      // ouverture d'une fenetre modale\n      $('#melange_avec_animaux').modal();\n    }\n  });\n\n  // Ecouteur destiné à transférrer le nom de la case num à la case nom\n  $('.numero_animal').on('change', function () {\n    // On explose la saisie num + nom\n    var nom = $(this).val().split('-')[1];\n    // S'il y a un nom (cas où l'identité de l'animal n'est pas limitée à un numéro)\n    if (nom != undefined) {\n      // On récupère le num de prélèvement\n      var i = $(this).attr('id').split('_')[2];\n      // On récupère le numéro de l'animal\n      var num = $(this).val().split('-')[0];\n      // On met le nom dans la champs nom\n      $(\"#nom_animal_\" + i).val(nom);\n      // Et on met le numéro dans la case numéro\n      $(\"#numero_animal_\" + i).val(num);\n    }\n  });\n  // Vide le num de l'animal quand on clique sur la croix\n  $(\".vide_numero_animal\").on('click', function () {\n    var i = $(this).attr('id').split('_')[3];\n    $(\"#numero_animal_\" + i).val(\"\");\n    $(\"#nom_animal_\" + i).val(\"\");\n  });\n\n  // Fonction de base qui est lancée quand on a un prélèvement individuel et qui récupère la liste des animaux\n  function liste_animals(i) {\n    var troupeau_id = $(\"#troupeau\").attr('num');\n    var demande_id = $('input[name=demande_id]').attr('value');\n    $('.animal_num').empty();\n    $('#numero_animal_' + i).attr(\"required\", true).focus();\n    var url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n\n    var anc = 'laboratoire/prelevement/create/' + demande_id;\n    var nouv = 'api/animal/' + troupeau_id;\n    var url = url_actuelle.replace(anc, nouv);\n    $.get({\n      url: url\n    }).done(function (datas) {\n      var animals = JSON.parse(datas);\n      var liste_animals = '';\n      $.each(animals, function (key, animal) {\n        if (animal.nom == null) {\n          liste_animals += '<option value=\"' + animal.numero + '\">' + animal.numero;\n          '</option>';\n        } else {\n          liste_animals += '<option value=\"' + animal.numero + '-' + animal.nom + '\">' + animal.numero + ' - ' + animal.nom;\n          '</option>';\n        }\n      });\n      $(\".animal_num\").append(liste_animals);\n    });\n  }\n  function liste_melanges(i) {\n    var troupeau_id = $(\"#troupeau\").attr('num');\n    var demande_id = $('input[name=demande_id]').attr('value');\n    $(\".liste_melanges\").empty();\n    var url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n\n    var anc = 'laboratoire/prelevement/create/' + demande_id;\n    var nouv = 'api/melanges/' + troupeau_id;\n    var url = url_actuelle.replace(anc, nouv);\n    $.get({\n      url: url\n    }).done(function (datas) {\n      var melanges = JSON.parse(datas);\n      var liste_melanges = '';\n      $.each(melanges, function (key, melange) {\n        liste_melanges += '<option value=\"' + melange.nom + '\">' + melange.nom + '</option>';\n      });\n      $(\".liste_melanges\").append(liste_melanges);\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/createPrelevement.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/createPrelevement.js"]();
/******/ 	
/******/ })()
;